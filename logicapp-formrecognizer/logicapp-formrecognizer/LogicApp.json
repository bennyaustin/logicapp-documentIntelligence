{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "jioindiawest",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "uaenorth",
        "southafricanorth",
        "southafricawest",
        "switzerlandnorth",
        "switzerlandwest",
        "germanynorth",
        "germanywestcentral",
        "norwaywest",
        "norwayeast",
        "brazilsoutheast",
        "westus3",
        "swedencentral",
        "qatarcentral"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "formrecognizer_model_id": {
      "type": "string",
      "metadata": {
        "description": "Id (GUID) of the custom form recognizer model"
      },
      "defaultValue": "your_formrecognizer_model_id"
    },
    "azureeventgrid_connection_name": {
      "type": "string",
      "defaultValue": "aiml_eventgrid"
    },
    "azureeventgrid_connection_displayName": {
      "type": "string",
      "defaultValue": "aiml_eventgrid"
    },
    "formrecognizer_connection_name": {
      "type": "string",
      "defaultValue": "aiml_formrecognizer"
    },
    "formrecognizer_connection_displayName": {
      "type": "string",
      "defaultValue": "aiml_formrecognizer"
    },
    "formrecognizer_api_key": {
      "type": "securestring",
      "metadata": {
        "description": "Form Recognizer Account Key"
      }
    },
    "formrecognizer_siteUrl": {
      "type": "securestring",
      "metadata": {
        "description": "Form Recognizer Endpoint Url (Example: https://your-formrecognizer-resource.cognitiveservices.azure.com/)"
      },
      "defaultValue": "https://your-formrecognizer-resource.cognitiveservices.azure.com"
    },
    "azureblob_connection_name": {
      "type": "string",
      "defaultValue": "aiml_blobstorage"
    },
    "azureblob_connection_displayName": {
      "type": "string",
      "defaultValue": "aiml_blobstorage"
    },
    "azureblob_accountName": {
      "type": "securestring",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      }
    },
    "azureblob_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Specify a valid primary/secondary storage account access key."
      }
    },
    "azureblob_authType": {
      "type": "string",
      "metadata": {
        "description": "Authentication type to connect to your database"
      },
      "allowedValues": [
        "basic",
        "anonymous"
      ],
      "defaultValue": "basic"
    },
    "azureblob_privacySetting": {
      "type": "string",
      "metadata": {
        "description": "Privacy Setting"
      },
      "allowedValues": [
        "None",
        "Private",
        "Organizational",
        "Public"
      ],
      "defaultValue": "Public"
    }
  },
  "variables": {
    "logicAppUniqueName": "[concat(toLower(parameters('logicAppName')),'-', uniqueString(resourceGroup().id))]",
    "analyzeAPI": "[concat(parameters('formrecognizer_siteUrl'),'/formrecognizer/documentModels/',parameters('formrecognizer_model_id'),':analyze?api-version=2022-08-31')]"
  },
  "resources": [
    {
      "name": "[variables('logicAppUniqueName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "docUrl": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "docUrl",
                    "type": "string",
                    "value": "@{triggerBody()['data']['url']}"
                  }
                ]
              },
              "runAfter": {}
            },
            "blobUrl": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "blobUrl",
                    "type": "string",
                    "value": "@{substring(variables('docUrl'),indexOf(variables('docUrl'),'drop-zone'))}"
                  }
                ]
              },
              "runAfter": {
                "docUrl": [
                  "Succeeded"
                ]
              }
            },
            "Get_doc_content": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/GetFileContentByPath",
                "queries": {
                  "path": "@variables('blobUrl')",
                  "queryParametersSingleEncoded": true,
                  "inferContentType": true
                }
              },
              "runAfter": {
                "blobUrl": [
                  "Succeeded"
                ]
              }
            },
            "Write_output_JSON": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "post",
                "headers": {
                  "ReadFileMetadataFromServer": true
                },
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                "queries": {
                  "folderPath": "/inference/formrecognizer-re-json/",
                  "name": "@variables('outputJson')",
                  "queryParametersSingleEncoded": true
                }
              },
              "runAfter": {
                "outputJson": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "contentTransfer": {
                  "transferMode": "Chunked"
                }
              }
            },
            "outputJson": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "outputJson",
                    "type": "string",
                    "value": "@{replace(substring(variables('blobUrl'),lastIndexOf(variables('blobUrl'),'/')),'.pdf','.json')}"
                  }
                ]
              },
              "runAfter": {
                "Set_output": [
                  "Succeeded"
                ]
              }
            },
            "modelId": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "modelId",
                    "type": "string",
                    "value": "[parameters('formrecognizer_model_id')]"
                  }
                ]
              },
              "runAfter": {
                "Get_doc_content": [
                  "Succeeded"
                ]
              }
            },
            "Form_Recognizer_Analyze_API": {
              "type": "Http",
              "inputs": {
                "method": "POST",
                "uri": "https://your-formrecognizer-resource.cognitiveservices.azure.com/formrecognizer/documentModels/your_formrecognizer_model_id:analyze?api-version=2022-08-31",
                "headers": {
                  "Content-Type": "application/pdf",
                  "Ocp-Apim-Subscription-Key": "[parameters('formrecognizer_api_key')]"
                },
                "body": "@body('Get_doc_content')"
              },
              "runAfter": {
                "analyzeAPI": [
                  "Succeeded"
                ]
              }
            },
            "analyzeAPI": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "analyzeAPI",
                    "type": "string"
                  }
                ]
              },
              "runAfter": {
                "modelId": [
                  "Succeeded"
                ]
              }
            },
            "status": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "status",
                    "type": "string",
                    "value": "running"
                  }
                ]
              },
              "runAfter": {
                "Form_Recognizer_Analyze_API": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "output",
                    "type": "string"
                  }
                ]
              },
              "runAfter": {
                "status": [
                  "Succeeded"
                ]
              }
            },
            "Until_Finish": {
              "type": "Until",
              "expression": "@equals(variables('status'), 'succeeded')",
              "limit": {
                "count": 5000,
                "timeout": "PT1H"
              },
              "actions": {
                "Get_Document": {
                  "type": "Http",
                  "inputs": {
                    "method": "GET",
                    "uri": "@{outputs('Form_Recognizer_Analyze_API')['headers']?['Operation-Location']}",
                    "headers": {
                      "Ocp-Apim-Subscription-Key": "[parameters('formrecognizer_api_key')]"
                    }
                  },
                  "runAfter": {}
                },
                "Set_status": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "status",
                    "value": "@{body('Get_Document')?['status']}"
                  },
                  "runAfter": {
                    "Get_Document": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              }
            },
            "Set_output": {
              "type": "SetVariable",
              "inputs": {
                "name": "output",
                "value": "@{body('Get_Document')['analyzeResult']['documents']}"
              },
              "runAfter": {
                "Until_Finish": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_doc_is_uploaded": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureeventgrid_1']['connectionId']"
                  }
                },
                "body": {
                  "properties": {
                    "topic": "/subscriptions/e836675f-2508-4873-ad4f-754d70253b22/resourceGroups/rg-aiml/providers/Microsoft.Storage/storageAccounts/bacustmodelstorage01q575",
                    "destination": {
                      "endpointType": "webhook",
                      "properties": {
                        "endpointUrl": "@{listCallbackUrl()}"
                      }
                    },
                    "filter": {
                      "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated"
                      ],
                      "subjectBeginsWith": "/blobServices/default/containers/drop-zone/blobs/form-recognizer-custom-model-drop-zone/",
                      "subjectEndsWith": ".pdf"
                    }
                  }
                },
                "path": "/subscriptions/@{encodeURIComponent('e836675f-2508-4873-ad4f-754d70253b22')}/providers/@{encodeURIComponent('Microsoft.Storage.StorageAccounts')}/resource/eventSubscriptions",
                "queries": {
                  "x-ms-api-version": "2017-06-15-preview"
                }
              },
              "splitOn": "@triggerBody()"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureblob')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureblob_connection_name'))]",
                "connectionName": "[parameters('azureblob_connection_name')]"
              },
              "azureeventgrid_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureeventgrid')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureeventgrid_connection_name'))]",
                "connectionName": "[parameters('azureeventgrid_connection_name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azureblob_connection_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azureeventgrid_connection_name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureeventgrid_connection_name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureeventgrid')]"
        },
        "displayName": "[parameters('azureeventgrid_connection_displayName')]"
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('formrecognizer_connection_name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'formrecognizer')]"
        },
        "displayName": "[parameters('formrecognizer_connection_displayName')]",
        "parameterValues": {
          "api_key": "[parameters('formrecognizer_api_key')]",
          "siteUrl": "[parameters('formrecognizer_siteUrl')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureblob_connection_name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureblob')]"
        },
        "displayName": "[parameters('azureblob_connection_displayName')]",
        "parameterValues": {
          "accountName": "[parameters('azureblob_accountName')]",
          "accessKey": "[parameters('azureblob_accessKey')]",
          "authType": "[parameters('azureblob_authType')]",
          "privacySetting": "[parameters('azureblob_privacySetting')]"
        }
      }
    }
  ],
  "outputs": {}
}